// String Functions
// ================

$interpolation-format-string: '%s';


// String Replace
// --------------
// Return a string, with a substring replaced
@function str-replace(
  $string,
  $old,
  $new: null
) {
  $_return: $string;
  $_i: str-index($string, $old);
  $_n: str-length($old);

  @if $string == $old {
    $_return: $new;
  } @else if $_i {
    $_a: if($_i > 1, str-slice($string, 1, $_i - 1), '');
    $_z: str-slice($string, $_i + $_n);
    $_return: $_a + if($new, $new, '') + $_z;
  }

  @return $_return;
}


// Interpolate
// -----------
// Return a string with interpolated values replacing '%s' format strings
@function interpolate(
  $string,
  $values...
) {
  $_return: $string;

  @each $val in $values {
    @if str-index($_return, $interpolation-format-string) {
      $_return: str-replace($_return, $interpolation-format-string, $val);
    } @else {
      @warn 'Too many values passed for interpolation with "#{$string}".';
    }
  }

  @if str-index($_return, $interpolation-format-string) {
    @warn 'Not all format strings were replaced in "#{$string}".';
  }

  @return $_return;
}
