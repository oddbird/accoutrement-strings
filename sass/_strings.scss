// String Functions
// ================

$interpolation-format-string: '%s';


// String Replace
// --------------
/// Return a string, with a substring replaced
@function str-replace(
  $string,
  $old,
  $new: null,
  $replace-all: false
) {
  $return: $string;
  $i: str-index($string, $old);
  $n: str-length($old);

  @if $string == $old {
    $return: $new;
  } @else if $i {
    $a: if($i > 1, str-slice($string, 1, $i - 1), '');
    $z: str-slice($string, $i + $n);

    @if $replace-all {
      $z: str-replace($z, $old, $new, true);
    }

    $return: $a + if($new, $new, '') + $z;
  }

  @return $return;
}


// Interpolate
// -----------
/// Return a string with interpolated values
/// replacing '%s' format strings
@function interpolate(
  $string,
  $values...
) {
  $_return: $string;

  @each $val in $values {
    @if str-index($_return, $interpolation-format-string) {
      $_return: str-replace($_return, $interpolation-format-string, $val);
    } @else {
      @warn 'Too many values passed for interpolation with "#{$string}".';
    }
  }

  @if str-index($_return, $interpolation-format-string) {
    @warn 'Not all format strings were replaced in "#{$string}".';
  }

  @return $_return;
}
